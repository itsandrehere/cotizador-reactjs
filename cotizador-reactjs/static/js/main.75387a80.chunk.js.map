{"version":3,"sources":["components/Header/Header.js","components/Form/Form.js","funtions/helper.js","components/resumen/resumen.js","components/resultado/result.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Form","marcaRef","React","createRef","yearRef","basicoRef","completoRef","CotizarSeguro","e","preventDefault","plan","_this","current","checked","infoAuto","marca","value","year","props","PropsCotizar","currentTarget","reset","onSubmit","this","id","ref","name","type","primeraMayuscula","texto","charAt","toUpperCase","slice","Resumen","mostrarResumen","_this$props$Datos","Datos","result","mostrarResult","resul","resultado","NaN","App","state","datos","cotizar","datosForm","Date","getFullYear","obtenerDiferenciaAnio","modelo","incremento","calcularMarca","obtenerPlan","parseFloat","toFixed","console","log","datosAuto","setState","components_Header_Header","components_Form_Form","resumen_resumen","components_resultado_result","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75387a80.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Header.css\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"container-Header\">\n        <h1>Cotizador de Autos</h1>\n      </div>\n    );\n  }\n}\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"./Form.css\";\n\nclass Form extends Component {\n\n    //refs es para leer los valores de los campos de un formulario\n\n    marcaRef = React.createRef();\n    yearRef = React.createRef();\n    basicoRef = React.createRef();\n    completoRef = React.createRef();\n\n    //funcion para guardar datos de formulario\n   CotizarSeguro = (e) => {\n        e.preventDefault();\n       \n\n        //obtener datos\n\n            // console.log(this.marcaRef.current.value);\n            \n\n        //crear el objeto\n            const plan =  this.basicoRef.current.checked ? 'basico' : 'completo'\n            const infoAuto = {\n                marca: this.marcaRef.current.value,\n                year: this.yearRef.current.value,\n                plan: plan,\n            }\n           // console.log(infoAuto);\n            \n\n        //enviar a props en App.js  \n        \n        this.props.PropsCotizar(infoAuto);\n\n        //resetear formulario\n\n        e.currentTarget.reset(); // resetear formulario con react\n\n    }\n    \n  render() {\n    return (\n      <div className=\"form-div\">\n        <form onSubmit={this.CotizarSeguro}>\n          <div className=\"row\">\n            <div className=\"col-md 6\">\n              <div className=\"form-group\">\n                <label >Marca</label>\n                <select className=\"form-control\" id=\"marca\" ref={this.marcaRef}>\n                  <option></option>\n                  <option value=\"americano\">Americano</option>\n                  <option value=\"europeo\">Europeo</option>\n                  <option value=\"asiatico\">Asiatico</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"col-md 6\">\n              <div className=\"form-group\">\n                <label >AÃ±o</label>\n                 <select className=\"form-control\" id=\"ano\" ref={this.yearRef}>\n                  <option></option>\n                  <option value=\"2019\">2019</option>\n                  <option value=\"2018\">2018</option>\n                  <option value=\"2017\">2017</option>\n                  <option value=\"2016\">2016</option>\n                  <option value=\"2015\">2015</option>\n                  <option value=\"2014\">2014</option>\n                  <option value=\"2013\">2013</option>\n                  <option value=\"2012\">2012</option>\n                  <option value=\"2011\">2011</option>\n                  <option value=\"2010\">2010</option>\n                  <option value=\"2009\">2009</option>\n                  <option value=\"2008\">2008</option>\n                </select>\n              </div>\n              <div />\n            </div>\n          </div>\n          <div className=\"row\"> \n                <div className=\"col md-3\">\n                  <input className=\"form-check-input\" name=\"plan\" type=\"radio\"  value=\"basico\" ref={this.basicoRef} /> Basico\n                  \n                </div>\n                <div className=\"col md-3\">\n                    <input className=\"form-check-input\" name=\"plan\" type=\"radio\"  value=\"completo\" ref={this.completoRef} /> Completo\n                </div>\n          </div>\n          <div >\n            <button type=\"submit\" className=\"button-cotizar\">Cotizar</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default Form;\n","\nexport function obtenerDiferenciaAnio(year) {\n    return new Date().getFullYear() - year;\n }\n \n export function calcularMarca( modelo ) {\n     let incremento;\n \n     switch (modelo) {\n         case 'europeo':\n             incremento = 1.30;\n             break;\n         case 'americano':\n             incremento = 1.15;\n             break;\n         case 'asiatico':\n             incremento = 1.05;\n             break;\n         default:\n             break;\n     }\n \n     return incremento;\n }\n export function obtenerPlan( plan ) {\n     return (plan === 'basico') ? 1.20 : 1.50;\n }\n export function primeraMayuscula(texto) {\n     return texto.charAt(0).toUpperCase() + texto.slice(1);\n }","import React, {Component} from 'react'\nimport \"./resumen.css\";\nimport { primeraMayuscula } from '../../funtions/helper';\n\nclass Resumen extends Component{\n   \n    mostrarResumen = () =>{\n        const {year, marca, plan} = this.props.Datos\n        if(!year || !marca || !plan ) return (\n            <div className=\"Resumen\">\n                <label>Cotiza segun tus valores</label>\n            </div>\n        )\n\n        return(\n                <div className=\"Resumen\">\n                    <label>Resumen de tu cotizacion</label>\n                    <ul>\n                        <li>Marca: { primeraMayuscula(marca)}</li>\n                        <li>AÃ±o: {primeraMayuscula(year)}</li>\n                        <li>Plan: {primeraMayuscula(plan)}</li> \n                    </ul>\n                </div>\n        )\n    }\n    render(){\n        //const {resultado} = this.props.Datos.resultado;\n        return (\n            <div >\n                {this.mostrarResumen()}\n            </div>\n        )\n    }\n}\nexport default Resumen","import React, {Component} from 'react'\nimport \"./result.css\";\n\nclass result extends Component {\n    mostrarResult = () =>{\n        const resul = this.props.resultado\n        if(!resul || resul!= NaN ) return (\n            <label className=\"result\">No hay ninguna cotizacion\n            </label>\n        )\n        return(\n            <label className=\"result\">El resultado es:  ${resul}\n            </label>\n        )\n    }\n    render(){\n        return(\n            <div>\n                {this.mostrarResult()}\n            </div>\n        )\n    }\n}\nexport default result","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Form from './components/Form/Form';\nimport { obtenerDiferenciaAnio, calcularMarca, obtenerPlan } from './funtions/helper'\nimport Resumen from './components/resumen/resumen';\nimport Result from './components/resultado/result';\n\nclass App extends Component {\n\n  state = {\n    resultado : '',\n    datos : {}\n  }\n\n  cotizar = (datosForm) => {\n      const { marca, plan, year } = datosForm; \n      //agregar base de 2000\n        let resultado = 2000;\n      //Obtener diferencia de ano, y por cada ano restar el 3%\n        const diferencia = obtenerDiferenciaAnio(year);\n        resultado -= ((diferencia * 3) * resultado) / 100\n      //Amerciano es 15%, asiatico 5% y europeo 30% al valor actual\n        resultado = calcularMarca(marca) * resultado;\n      // el plan basico aumento el 20% y el completo un 50%\n        let incremento = obtenerPlan(plan);\n        resultado = parseFloat(incremento * resultado).toFixed(2);\n        console.log(resultado)\n\n        const datosAuto ={\n          marca: marca,\n          plan : plan,\n          year : year\n        }\n        this.setState({\n          resultado: resultado,\n          datos: datosAuto\n        })\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Form PropsCotizar={this.cotizar} />\n        <Resumen Datos={this.state.datos} />\n        <Result resultado={this.state.resultado}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../src/assets/normalize.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}